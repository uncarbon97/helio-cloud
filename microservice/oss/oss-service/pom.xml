<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <parent>
        <groupId>cc.uncarbon.module</groupId>
        <artifactId>oss</artifactId>
        <version>1.10.0</version>
    </parent>

    <artifactId>oss-service</artifactId>

    <properties>
        <!-- 引入其他微服务模块 -->
        <sys.version>1.10.0</sys.version>


        <!-- 这里写其他第三方依赖 -->
        <!-- 文件上传 -->
        <x-file-storage.version>2.0.0</x-file-storage.version>
        <minio.version>8.4.3</minio.version>
    </properties>

    <dependencies>
        <!-- 实现业务微服务 -->
        <dependency>
            <groupId>cc.uncarbon.module</groupId>
            <artifactId>oss-facade</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- 引入其他微服务模块 -->
        <dependency>
            <groupId>cc.uncarbon.module</groupId>
            <artifactId>sys-facade</artifactId>
            <version>${sys.version}</version>
        </dependency>


        <!-- 脚手架starter -->
        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-core</artifactId>
        </dependency>

        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-starter-cloud</artifactId>
            <exclusions>
                <!-- 业务微服务里用不到 Sentinel -->
                <exclusion>
                    <groupId>com.alibaba.cloud</groupId>
                    <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-starter-crud</artifactId>
        </dependency>

        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-starter-dubbo</artifactId>
        </dependency>

        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>cc.uncarbon.framework</groupId>
            <artifactId>helio-starter-web</artifactId>
        </dependency>


        <!-- 这里写其他第三方依赖 -->
        <!-- 对象存储工具类 https://gitee.com/dromara/x-file-storage -->
        <dependency>
            <groupId>org.dromara.x-file-storage</groupId>
            <artifactId>x-file-storage-spring</artifactId>
            <version>${x-file-storage.version}</version>
            <exclusions>
                <!-- hutool版本冲突，用 helio-core 的版本 -->
                <exclusion>
                    <groupId>cn.hutool</groupId>
                    <artifactId>hutool-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- MinIO 依赖包 -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>${minio.version}</version>
        </dependency>
    </dependencies>

    <build>
        <!-- 支持 mybatis XML 放置在 java 包下 -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <!-- Spring Boot 打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <fork>true</fork>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 编译时，跳过单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- 编译时，不执行 mvn deploy -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- 编译时，不生成 javadoc.jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- 编译时，不生成 sources.jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <skipSource>true</skipSource>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
